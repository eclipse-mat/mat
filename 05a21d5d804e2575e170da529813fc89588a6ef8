{
  "comments": [
    {
      "key": {
        "uuid": "87f6139c_1b0422ce",
        "filename": "plugins/org.eclipse.mat.api/src/org/eclipse/mat/inspections/collectionextract/CollectionExtractionUtils.java",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 16759
      },
      "writtenOn": "2015-05-07T11:19:59Z",
      "side": 1,
      "message": "I propose we change the signature to \n\npublic static ExtractedCollectionBase\u003c?, ?\u003e extractCollection(IObject coll,\n    \t\tString specificClass, CollectionExtractor preferredExtractor) throws SnapshotException {\n\ni.e. offer another version of extractCollection, which offers the possibility to pass a preferredExtractor. We should document in which cases it won\u0027t be used",
      "range": {
        "startLine": 56,
        "startChar": 4,
        "endLine": 57,
        "endChar": 93
      },
      "revId": "05a21d5d804e2575e170da529813fc89588a6ef8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87f6139c_42e6bbd5",
        "filename": "plugins/org.eclipse.mat.api/src/org/eclipse/mat/inspections/collectionextract/CollectionExtractionUtils.java",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 23040
      },
      "writtenOn": "2015-05-08T05:37:28Z",
      "side": 1,
      "message": "I\u0027m fine with this either way on the naming of this and the map version.\n\nThese methods are only used in two places each, by the existing queries that lets you specify a class name as a parameter, to force the queries to operation on a collection they otherwise wouldn\u0027t. I don\u0027t know if many people use that functionality, but I didn\u0027t want to break anything.",
      "parentUuid": "87f6139c_1b0422ce",
      "range": {
        "startLine": 56,
        "startChar": 4,
        "endLine": 57,
        "endChar": 93
      },
      "revId": "05a21d5d804e2575e170da529813fc89588a6ef8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87f6139c_7b28c636",
        "filename": "plugins/org.eclipse.mat.api/src/org/eclipse/mat/inspections/collectionextract/CollectionExtractionUtils.java",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 16759
      },
      "writtenOn": "2015-05-07T11:19:59Z",
      "side": 1,
      "message": "Same as for extractCollectionUnlessSpecific above.",
      "range": {
        "startLine": 65,
        "startChar": 28,
        "endLine": 65,
        "endChar": 52
      },
      "revId": "05a21d5d804e2575e170da529813fc89588a6ef8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87f6139c_9b5bf201",
        "filename": "plugins/org.eclipse.mat.api/src/org/eclipse/mat/inspections/collectionextract/CollectionExtractor.java",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 16759
      },
      "writtenOn": "2015-05-07T11:19:59Z",
      "side": 1,
      "message": "What about renaming to ICollectionExtractor - just to stay consistent with the rest of MAT API, where all interfaces start with I",
      "range": {
        "startLine": 10,
        "startChar": 37,
        "endLine": 10,
        "endChar": 38
      },
      "revId": "05a21d5d804e2575e170da529813fc89588a6ef8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87f6139c_dbd0dac4",
        "filename": "plugins/org.eclipse.mat.api/src/org/eclipse/mat/inspections/collectionextract/ExtractedCollectionBase.java",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 16759
      },
      "writtenOn": "2015-05-07T11:19:59Z",
      "side": 1,
      "message": "What about renaming to AbstractExtractedCollection - just to stay consistent with the rest of MAT API",
      "range": {
        "startLine": 17,
        "startChar": 45,
        "endLine": 17,
        "endChar": 46
      },
      "revId": "05a21d5d804e2575e170da529813fc89588a6ef8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87f6139c_1b470225",
        "filename": "plugins/org.eclipse.mat.api/src/org/eclipse/mat/inspections/collectionextract/MapExtractor.java",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 16759
      },
      "writtenOn": "2015-05-07T11:19:59Z",
      "side": 1,
      "message": "What about renaming to IMapExtractor - just to stay consistent with the rest of MAT API, where all interfaces start with I",
      "range": {
        "startLine": 17,
        "startChar": 58,
        "endLine": 17,
        "endChar": 59
      },
      "revId": "05a21d5d804e2575e170da529813fc89588a6ef8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87f6139c_b72b4806",
        "filename": "plugins/org.eclipse.mat.api/src/org/eclipse/mat/inspections/collections/ExtractListValuesQuery.java",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 16759
      },
      "writtenOn": "2015-05-15T09:17:33Z",
      "side": 1,
      "message": "There is a check in the original coding. Have to check what the effect of skipping it can be.",
      "range": {
        "startLine": 43,
        "startChar": 71,
        "endLine": 43,
        "endChar": 112
      },
      "revId": "05a21d5d804e2575e170da529813fc89588a6ef8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87f6139c_97e9ec2f",
        "filename": "plugins/org.eclipse.mat.api/src/org/eclipse/mat/inspections/collections/MapCollisionRatioQuery.java",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 16759
      },
      "writtenOn": "2015-05-15T09:17:33Z",
      "side": 1,
      "message": "I think this is fine",
      "range": {
        "startLine": 84,
        "startChar": 24,
        "endLine": 84,
        "endChar": 61
      },
      "revId": "05a21d5d804e2575e170da529813fc89588a6ef8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87f6139c_c2f2ab91",
        "filename": "plugins/org.eclipse.mat.api/src/org/eclipse/mat/internal/collectionextract/KnownCollectionInfo.java",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 23040
      },
      "writtenOn": "2015-05-08T05:37:28Z",
      "side": 1,
      "message": "I just remembered that a few months ago I re-wrote to use an extension point rather than hard-coding the list, so that other plugins (like my EE one) could add new supported collections.\n\nI can\u0027t seem to fix that code, hopefully I didn\u0027t lose it when getting my new laptop.\n\nI don\u0027t know if we need the extension point in the initial iteration of the API, but it would probably be useful.",
      "revId": "05a21d5d804e2575e170da529813fc89588a6ef8",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}