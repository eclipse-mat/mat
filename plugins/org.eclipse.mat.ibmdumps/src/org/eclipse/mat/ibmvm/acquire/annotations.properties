#*******************************************************************************
#* Copyright (c) 2010, 2018 IBM Corporation.
#* All rights reserved. This program and the accompanying materials
#* are made available under the terms of the Eclipse Public License v1.0
#* which accompanies this distribution, and is available at
#* http://www.eclipse.org/legal/epl-v10.html
#*
#* Contributors:
#*    IBM Corporation - initial implementation
#*    IBM Corporation/Andrew Johnson - Hprof additions
#*******************************************************************************
BaseProvider.defaultType.help = Choose SYSTEM for a full system dump, optionally processed with jextract, \
with full object, class, field name data and full field and array values. \n\
Choose HEAP for a Portable Heap Dump, with object and class sizes and references, \
but without field names, or primitive field and array values.\n\
Choose JAVA for a Javadump, with only classes, class loaders and thread stacks \
but without object or class sizes or references, \
field names, or primitive field and array values.\n\
Choose HPROF for a full dump from Oracle-based JVMs, \
with full object, class, field name data and full field and array values.
BaseProvider.defaultLive.help = Whether to dump live objects only. Selecting this may force a garbage collection on the target process before the dump.
BaseProvider.defaultCompress.help = Whether to compress the generated dump, to save disk space at the possible cost of a longer load time.
BaseProvider.listAttach.help = Whether to attach to every running JVM to get more details when listing all JVMs. This takes longer and may affect the JVM.
BaseProvider.systemDumpTemplate.help = A template for the suggested system dump file name.
BaseProvider.systemDumpZipTemplate.help = A template for the suggested compressed system dump file name.
BaseProvider.heapDumpTemplate.help = A template for the suggested heap dump file name.
BaseProvider.heapDumpZipTemplate.help = A template for the suggested compressed heap dump file name.
BaseProvider.javaDumpTemplate.help = A template for the suggested Java dump file name.
BaseProvider.hprofDumpTemplate.help = A template for the suggested HPROF dump file name.
IBMExecDumpProvider.name = Attach API using a helper JVM
IBMExecDumpProvider.help = This generates a dump from an IBM JVM, using a helper IBM JVM \
with the Attach API to list the IBM JVMs and to attach to the target.\n\
Also works for generating dumps from Oracle-based JVMs using a helper Oracle-based JDK JVM.
IBMExecDumpProvider.javaexecutable.help = Path to an IBM 'java' executable, to provide the Attach API \
to list and dump the target IBM JVMs.\n\
Also can be a path to an Oracle-based JDK 'java' executable, to provide the Attach API \
to list and dump the Oracle-based target JVMs.
IBMExecDumpProvider.vmoptions.help = Options with which to run the helper JVM.
IBMDumpProvider.name = Attach API
IBMDumpProvider.help = This generates a dump from an IBM JVM, using the Attach API \
supplied with the IBM JVM used to run Memory Analyzer \
to list the IBM JVMs and to attach to the target.\n\
Also works when MAT is run with an Oracle-based JDK JVM for generating dumps from Oracle-based VMs.
IBMVmInfo.name = Configuration for a dump using the Attach API
IBMVmInfo.help = This generates a dump from an IBM JVM using the Attach API.\n\
Also works when MAT is run with an Oracle-based JDK JVM for generating dumps from Oracle-based JVMs.
IBMVmInfo.type.help = Choose SYSTEM for a full system dump, optionally processed with jextract, \
with full object, class, field name data and full field and array values. \n\
Choose HEAP for a Portable Heap Dump, with object and class sizes and references, \
but without field names, or primitive field and array values.\n\
Choose JAVA for a Javadump, with only classes, class loaders and thread stacks \
but without object or class sizes or references, \
field names, or primitive field and array values.\n\
Choose HPROF for a full dump from Oracle-based VMs, \
with full object, class, field name data and full field and array values.
IBMVmInfo.live.help = Whether to dump live objects only. Selecting this may force a garbage collection on the target process before the dump.
IBMVmInfo.compress.help = Whether to compress the generated dump with jextract or gzip, to save disk space at the possible cost of a longer load time.
IBMVmInfo.dumpdir.help = Alternative location used to find where the target JVM generates dump files. \
If not specified then the system property 'user.dir' on the target JVM is used to find the dump files. This option \
can be useful when JVM options have been used to select an alternative dump location or \
on the Windows 7 operating system when writes to the program directory %ProgramFiles(x86)% \
have been redirected to %LOCALAPPDATA%\\VirtualStore or %USERPROFILE%\\AppData\\Local\\VirtualStore.
IBMExecVmInfo.name = Configuration for a dump using a helper JVM with the Attach API
IBMExecVmInfo.help = This generates a dump from an IBM JVM, using a helper IBM JVM \
to attach to the target IBM VM.\n\
Also works with a helper Oracle-based JDK JVM for generating dumps from Oracle-based VMs.
IBMExecVmInfo.javaexecutable.help = Path to an IBM 'java' executable, \
to provide the Attach API to attach to the target IBM JVM.\n\
Also can be a path to an Oracle-based JDK 'java' executable to provide the Attach API \
to list and dump the Oracle-based target JVMs.
IBMExecVmInfo.vmoptions.help = Options with which to run the helper JVM.
