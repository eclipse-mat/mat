<?xml version="1.0" encoding="UTF-8"?>
<!--
    Copyright (c) 2008, 2021 SAP AG, IBM Corporation and others.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License 2.0
    which accompanies this distribution, and is available at
    https://www.eclipse.org/legal/epl-2.0/
    
    SPDX-License-Identifier: EPL-2.0
   
    Contributors:
        SAP AG - initial API and implementation
        IBM Corporation - 1.4, 1.7, 1.8, 1.9, 1.10, 1.11, 1.12 updates
 -->
<!DOCTYPE reference PUBLIC "-//OASIS//DTD DITA Reference//EN" "reference.dtd" >
<reference id="ref_noteworthy" xml:lang="en-us">
	<title>New and Noteworthy</title>
	<shortdesc>Here are descriptions of some of the more interesting or
		significant changes made to <keyword>Eclipse Memory Analyzer</keyword> for the 1.12 release.
	</shortdesc>
	<prolog>
		<copyright>
			<copyryear year=""></copyryear>
			<copyrholder>
				Copyright (c) 2008, 2021 SAP AG, IBM Corporation and others.
			    All rights reserved. This program and the accompanying materials
			    are made available under the terms of the Eclipse Public License 2.0
			    which accompanies this distribution, and is available at
			    https://www.eclipse.org/legal/epl-2.0/
			</copyrholder>
		</copyright>
	</prolog>
	<refbody>
		<section>
			<title>Enhancements and fixes</title>
			<ul>
			<li>Compressed HPROF dumps created by OpenJDK 15 and later VMs are now read by Memory Analyzer.
			Also, the performance of Memory Analyzer reading HPROF dumps compressed by Gzip has been improved.</li>
			<li>Huge heap dumps can be handled in Memory Analyzer by discarding some of the objects from the heap dump.
			Users of Memory Analyzer can now examine some of those unindexed and discarded objects through the inspector view and OQL.</li>
			<li>The Leaks Suspects Report and the Component Report have been improved with 
			additional sections and details. The reports are now more accessible with a screen reader.</li>
			<li>Other bugs have been fixed. See <xref format="html" scope="external" 
					href="https://projects.eclipse.org/projects/tools.mat/releases/1.12.0/bugs">Memory Analyzer 1.12 issue list</xref>
			</li>
			</ul>
		</section>

		<section>
			<title>Security fixes</title>
			Memory Analyzer 1.12 includes the security fixes first included in Memory Analyzer 1.9.2.
			We highly recommend users of Eclipse Memory Analyzer version 1.9.1 or earlier to update to version 1.12.0 or subsequent versions.
			<dl>
				<dlentry>
					<dt><xref format="html" scope="external" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-17634">CVE-2019-17634</xref></dt>
						<dd><dl>
							<dlentry>
								<dt>PROBLEMTYPE</dt>
								<dd>CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')</dd>
							</dlentry>
							<dlentry>
								<dt>DESCRIPTION</dt>
								<dd>Eclipse Memory Analyzer version 1.9.1 and earlier is subject to a cross site scripting (XSS) vulnerability when generating an HTML report from a malicious heap dump. The user must chose to download, open the malicious heap dump and generate an HTML report for the problem to occur. The heap dump could be specially crafted, or could come from a crafted application or from an application processing malicious data. The vulnerability is present when a report is generated and opened from the Memory Analyzer graphical user interface, or when a report generated in batch mode is then opened in Memory Analyzer or by a web browser. The vulnerability could possibly allow code execution on the local system when the report is opened in Memory Analyzer.</dd>
							</dlentry>
						</dl></dd>
				</dlentry>
				<dlentry>
					<dt><xref format="html" scope="external" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-17635">CVE-2019-17635</xref></dt>
						<dd><dl>
							<dlentry>
								<dt>PROBLEMTYPE</dt>
								<dd>CWE-502: Deserialization of Untrusted Data</dd>
							</dlentry>
							<dlentry>
								<dt>DESCRIPTION</dt>
								<dd>Eclipse Memory Analyzer version 1.9.1 and earlier is subject to a deserialization vulnerability if an index file of a parsed heap dump is replaced by a malicious version and the heap dump is reopened in Memory Analyzer. The user must chose to reopen an already parsed heap dump with an untrusted index for the problem to occur. The problem can be averted if the index files from an untrusted source are deleted and the heap dump is opened and reparsed. Also some local configuration data is subject to a deserialization vulnerability if the local data were to be replaced with a malicious version. This can be averted if the local configuration data stored on the file system cannot be changed by an attacker. The vulnerability could possibly allow code execution on the local system.</dd>
							</dlentry>
						</dl></dd>
				</dlentry>
			</dl>
			The stand-alone Memory Analyzer 1.12 also includes security fixes from the underlying Eclipse Platform. These include fixes for the following.
			<dl>
				<dlentry>
					<dt><xref format="html" scope="external" href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-27225">CVE-2020-27225</xref></dt>
						<dd><dl>
							<dlentry>
								<dt>PROBLEMTYPE</dt>
								<dd>CWE-306: Missing Authentication for Critical Function</dd>
							</dlentry>
							<dlentry>
								<dt>DESCRIPTION</dt>
								<dd>In versions 4.18 and earlier of the Eclipse Platform, the Help Subsystem does not authenticate active help requests 
								to the local help web server, allowing an unauthenticated local attacker to issue active help commands to the associated 
								Eclipse Platform process or Eclipse Rich Client Platform process.</dd>
							</dlentry>
						</dl></dd>
				</dlentry>
			</dl>
		</section>
		<section>
			<title>New and Noteworthy for Memory Analyzer 1.12</title>
			<p>
				The latest New and Noteworthy document for version 1.12 is available 
				<xref format="html" scope="peer" href="http://www.eclipse.org/mat/1.12.0/noteworthy.html">here</xref>.
			</p>
		</section>
		<section>
			<title>New and Noteworthy for Memory Analyzer 1.11</title>
			<p>
				The New and Noteworthy document for version 1.11 is available 
				<xref format="html" scope="peer" href="http://www.eclipse.org/mat/1.11.0/noteworthy.html">here</xref>.
			</p>
		</section>
	</refbody>
</reference>
