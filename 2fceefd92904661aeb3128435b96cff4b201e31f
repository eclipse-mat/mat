{
  "comments": [
    {
      "key": {
        "uuid": "1d636e87_bbc60735",
        "filename": "plugins/org.eclipse.mat.parser/src/org/eclipse/mat/parser/index/IntIndexCollector.java",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 65230
      },
      "writtenOn": "2019-04-02T10:05:39Z",
      "side": 1,
      "message": "Perhaps we should document that this is now thread safe.",
      "revId": "2fceefd92904661aeb3128435b96cff4b201e31f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a66b77bc_7b2c8e31",
        "filename": "plugins/org.eclipse.mat.parser/src/org/eclipse/mat/parser/index/IntIndexCollector.java",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 233149
      },
      "writtenOn": "2019-04-18T17:00:20Z",
      "side": 1,
      "message": "ok",
      "parentUuid": "1d636e87_bbc60735",
      "revId": "2fceefd92904661aeb3128435b96cff4b201e31f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b30d1399_1e9f6f66",
        "filename": "plugins/org.eclipse.mat.parser/src/org/eclipse/mat/parser/index/IntIndexCollector.java",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 65230
      },
      "writtenOn": "2019-07-19T10:30:25Z",
      "side": 1,
      "message": "This removes \u0027extends IntIndex\u003cArrayIntCompressed\u003e\u0027 which would cause a problem if we moved IntIndexCollector back to IndexWriter (or added a stub class IntIndexCollector extending this one).\n\nThe Eclipse error would be:\nThe superclass hierarchy for org.eclipse.mat.parser.index.IndexWriter.IntIndexCollector has been reduced",
      "parentUuid": "a66b77bc_7b2c8e31",
      "revId": "2fceefd92904661aeb3128435b96cff4b201e31f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6217f97_f992dfe5",
        "filename": "plugins/org.eclipse.mat.parser/src/org/eclipse/mat/parser/index/IntIndexCollector.java",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 65230
      },
      "writtenOn": "2019-07-18T07:12:48Z",
      "side": 1,
      "message": "The new name getOrCreatePage makes more sense, but when we move this class back into IndexWriter this will cause an API change.",
      "revId": "2fceefd92904661aeb3128435b96cff4b201e31f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc8cca55_0d2a1ca1",
        "filename": "plugins/org.eclipse.mat.parser/src/org/eclipse/mat/parser/index/IntIndexCollector.java",
        "patchSetId": 2
      },
      "lineNbr": 69,
      "author": {
        "id": 65230
      },
      "writtenOn": "2019-04-02T10:05:39Z",
      "side": 1,
      "message": "This is safe, a write could update multiple elements so wouldn\u0027t be atomic, so removing the synchronize would be risky.",
      "revId": "2fceefd92904661aeb3128435b96cff4b201e31f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6de4b928_c2ceec26",
        "filename": "plugins/org.eclipse.mat.parser/src/org/eclipse/mat/parser/index/IntIndexCollector.java",
        "patchSetId": 2
      },
      "lineNbr": 69,
      "author": {
        "id": 233149
      },
      "writtenOn": "2019-04-18T17:00:20Z",
      "side": 1,
      "message": "This is a confusing comment on my part. It should read \"TODO unlock this code by improving array get and set\".\n\nThe answer is, in fact, yes we can unlock this, it just takes more code. I have this now in a branch unlocked on my. It requires rewriting ArrayLongCompressed and ArrayIntCompressed. I thought it best to leave that for a later pr!",
      "parentUuid": "bc8cca55_0d2a1ca1",
      "revId": "2fceefd92904661aeb3128435b96cff4b201e31f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb4a5875_849c3fcd",
        "filename": "plugins/org.eclipse.mat.parser/src/org/eclipse/mat/parser/index/IntIndexCollector.java",
        "patchSetId": 2
      },
      "lineNbr": 92,
      "author": {
        "id": 65230
      },
      "writtenOn": "2019-04-02T10:05:39Z",
      "side": 1,
      "message": "Did the original class implement this? If so, when we move the class back then we should implement this method for compatibility reasons.",
      "revId": "2fceefd92904661aeb3128435b96cff4b201e31f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "764b4d4f_d2d06105",
        "filename": "plugins/org.eclipse.mat.parser/src/org/eclipse/mat/parser/index/IntIndexCollector.java",
        "patchSetId": 2
      },
      "lineNbr": 92,
      "author": {
        "id": 233149
      },
      "writtenOn": "2019-04-18T17:00:20Z",
      "side": 1,
      "message": "It was inferred by me when reading the core that most of the original classes implemented these utility functions through superclasses or because they could. I noticed that many of these functions were not actually called, did not show up in any test cases, and were only provided in order to comply with an interface. (In other words, dead code.)",
      "parentUuid": "fb4a5875_849c3fcd",
      "revId": "2fceefd92904661aeb3128435b96cff4b201e31f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1042de02_2408fd18",
        "filename": "plugins/org.eclipse.mat.parser/src/org/eclipse/mat/parser/index/IntIndexCollector.java",
        "patchSetId": 2
      },
      "lineNbr": 97,
      "author": {
        "id": 65230
      },
      "writtenOn": "2019-04-02T10:05:39Z",
      "side": 1,
      "message": "Did the original class implement this? If so, when we move the class back then we should implement this method for compatibility reasons.",
      "revId": "2fceefd92904661aeb3128435b96cff4b201e31f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "079a388e_59883b9b",
        "filename": "plugins/org.eclipse.mat.parser/src/org/eclipse/mat/parser/index/LongIndexCollector.java",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 65230
      },
      "writtenOn": "2019-04-02T10:05:39Z",
      "side": 1,
      "message": "We should document how thread-safe this class now is.\n\nThis class is now missing methods which were in the original class - should we add the methods, or retain the old class and add this new one?",
      "range": {
        "startLine": 11,
        "startChar": 23,
        "endLine": 11,
        "endChar": 24
      },
      "revId": "2fceefd92904661aeb3128435b96cff4b201e31f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0fc9b4f7_11efab78",
        "filename": "plugins/org.eclipse.mat.parser/src/org/eclipse/mat/parser/index/LongIndexCollector.java",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 65230
      },
      "writtenOn": "2019-07-19T10:30:25Z",
      "side": 1,
      "message": "This removes \u0027extends LongIndex\u0027 which would cause a problem if we moved LongIndexCollector back to IndexWriter (or added a stub class LongIndexCollector extending this one).\n\nThe Eclipse error would be:\nThe superclass hierarchy for org.eclipse.mat.parser.index.IndexWriter.LongIndexCollector has been reduced",
      "parentUuid": "079a388e_59883b9b",
      "range": {
        "startLine": 11,
        "startChar": 23,
        "endLine": 11,
        "endChar": 24
      },
      "revId": "2fceefd92904661aeb3128435b96cff4b201e31f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "043874e0_bd11292d",
        "filename": "plugins/org.eclipse.mat.parser/src/org/eclipse/mat/parser/index/LongIndexCollector.java",
        "patchSetId": 2
      },
      "lineNbr": 24,
      "author": {
        "id": 65230
      },
      "writtenOn": "2019-07-18T07:12:48Z",
      "side": 1,
      "message": "The new name getOrCreatePage makes more sense, but when we move this class back into IndexWriter this will cause an API change.",
      "revId": "2fceefd92904661aeb3128435b96cff4b201e31f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aacd7844_c4a03d3b",
        "filename": "plugins/org.eclipse.mat.parser/src/org/eclipse/mat/parser/index/LongIndexCollector.java",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 65230
      },
      "writtenOn": "2019-04-02T10:05:39Z",
      "side": 1,
      "message": "Is this thread safe - if not we should document.",
      "revId": "2fceefd92904661aeb3128435b96cff4b201e31f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}