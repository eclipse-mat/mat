{
  "comments": [
    {
      "key": {
        "uuid": "1d636e87_bbc60735",
        "filename": "plugins/org.eclipse.mat.parser/src/org/eclipse/mat/parser/index/IntIndexCollector.java",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 65230
      },
      "writtenOn": "2019-04-02T10:05:39Z",
      "side": 1,
      "message": "Perhaps we should document that this is now thread safe.",
      "revId": "2fceefd92904661aeb3128435b96cff4b201e31f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bc8cca55_0d2a1ca1",
        "filename": "plugins/org.eclipse.mat.parser/src/org/eclipse/mat/parser/index/IntIndexCollector.java",
        "patchSetId": 2
      },
      "lineNbr": 69,
      "author": {
        "id": 65230
      },
      "writtenOn": "2019-04-02T10:05:39Z",
      "side": 1,
      "message": "This is safe, a write could update multiple elements so wouldn\u0027t be atomic, so removing the synchronize would be risky.",
      "revId": "2fceefd92904661aeb3128435b96cff4b201e31f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fb4a5875_849c3fcd",
        "filename": "plugins/org.eclipse.mat.parser/src/org/eclipse/mat/parser/index/IntIndexCollector.java",
        "patchSetId": 2
      },
      "lineNbr": 92,
      "author": {
        "id": 65230
      },
      "writtenOn": "2019-04-02T10:05:39Z",
      "side": 1,
      "message": "Did the original class implement this? If so, when we move the class back then we should implement this method for compatibility reasons.",
      "revId": "2fceefd92904661aeb3128435b96cff4b201e31f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1042de02_2408fd18",
        "filename": "plugins/org.eclipse.mat.parser/src/org/eclipse/mat/parser/index/IntIndexCollector.java",
        "patchSetId": 2
      },
      "lineNbr": 97,
      "author": {
        "id": 65230
      },
      "writtenOn": "2019-04-02T10:05:39Z",
      "side": 1,
      "message": "Did the original class implement this? If so, when we move the class back then we should implement this method for compatibility reasons.",
      "revId": "2fceefd92904661aeb3128435b96cff4b201e31f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "079a388e_59883b9b",
        "filename": "plugins/org.eclipse.mat.parser/src/org/eclipse/mat/parser/index/LongIndexCollector.java",
        "patchSetId": 2
      },
      "lineNbr": 11,
      "author": {
        "id": 65230
      },
      "writtenOn": "2019-04-02T10:05:39Z",
      "side": 1,
      "message": "We should document how thread-safe this class now is.\n\nThis class is now missing methods which were in the original class - should we add the methods, or retain the old class and add this new one?",
      "range": {
        "startLine": 11,
        "startChar": 23,
        "endLine": 11,
        "endChar": 24
      },
      "revId": "2fceefd92904661aeb3128435b96cff4b201e31f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aacd7844_c4a03d3b",
        "filename": "plugins/org.eclipse.mat.parser/src/org/eclipse/mat/parser/index/LongIndexCollector.java",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 65230
      },
      "writtenOn": "2019-04-02T10:05:39Z",
      "side": 1,
      "message": "Is this thread safe - if not we should document.",
      "revId": "2fceefd92904661aeb3128435b96cff4b201e31f",
      "serverId": "97ee7c02-f12f-4043-b43e-dea463d88b31",
      "unresolved": false
    }
  ]
}